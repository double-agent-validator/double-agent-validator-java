{"version":3,"sources":["webpack:///webpack/bootstrap 12cfb9283c2cd60359b4","webpack:///external \"@angular/core\"","webpack:///./src/validator.service.ts","webpack:///./src/models/remote-loader.ts","webpack:///./src/definitions-loader.service.ts","webpack:///./src/form/index.ts","webpack:///./src/validator.module.ts","webpack:///./src/form/form-control-validator-builder.service.ts","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"lodash\"","webpack:///./src/models/index.ts","webpack:///./src/form/form-group-builder.service.ts","webpack:///./src/ng2-factory.service.ts","webpack:///./src/remote-loaders/angular2-remote-loader.ts","webpack:///external \"rxjs/ReplaySubject\"","webpack:///external \"rxjs/add/operator/toPromise\"","webpack:///./src/index.ts"],"names":[],"mappings":"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","file":"double-agent-validator.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12cfb9283c2cd60359b4","module.exports = require(\"@angular/core\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0","import { ValidationResult } from './models';\nimport * as ajvNsAndConstructor from 'ajv';\nimport * as _ from 'lodash';\nimport { JsonSchema } from './models/schema/json-schema';\nimport { Injectable } from '@angular/core';\n\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\n/**\n *\n *\n * @export\n * @class DoubleAgentValidator\n */\n@Injectable()\nexport class DoubleAgentValidator {\n\n  private scriptContext: Window;\n  /**\n   *\n   *\n   * @private\n   * @type {ValidationResult}\n   * @memberOf DoubleAgentValidator\n   */\n  private noErrorResult: ValidationResult = { hasErrors: false, errors: null };\n\n  isReady: ReplaySubject<void> = new ReplaySubject<void>(1);\n\n  /**\n   * Creates an instance of DoubleAgentValidator.\n   *\n   *\n   * @memberOf DoubleAgentValidator\n   */\n  constructor() {\n  }\n\n  private _notifyReady() {\n    this.isReady.next(null);\n  }\n\n  /**\n   *\n   *\n   * @readonly\n   * @type {ajvNsAndConstructor.Ajv}\n   * @memberOf DoubleAgentValidator\n   */\n  get ajv(): ajvNsAndConstructor.Ajv {\n    return this.scriptContext['ajv'];\n  }\n\n  /**\n   *\n   *\n   * @param {string} schemaName\n   * @param {*} data\n   * @returns {ValidationResult}\n   *\n   * @memberOf DoubleAgentValidator\n   */\n  validate(schemaName: string, data: any): ValidationResult {\n    let result: ValidationResult = this.scriptContext['DoubleAgent']['JsonSchemaValidator'].validate(schemaName, data);\n    return result;\n  }\n\n  getSchema(schemaName: string): JsonSchema {\n    return <JsonSchema>this.scriptContext['DoubleAgent']['JsonSchemaValidator'].getSchemaObject(schemaName);\n  }\n\n\n  /**\n   *\n   *\n   * @param {JsonSchema} schema\n   * @returns {string[]}\n   *\n   * @memberOf DoubleAgentValidator\n   */\n  getKeywords(schema: JsonSchema): string[] {\n    return this.scriptContext['DoubleAgent']['JsonSchemaValidator'].getKeywords(schema);\n  }\n\n  getFormats(): {} {\n    return this.scriptContext['DoubleAgent']['JsonSchemaValidator'].getFormats();\n  }\n\n  /**\n  *\n  *\n  * @readonly\n  * @type {string[]}\n  * @memberOf DoubleAgentValidator\n  */\n  get schemasNames(): string[] {\n    return this.scriptContext['DoubleAgent']['JsonSchemaValidator'].getSchemas();\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/validator.service.ts","export class RemoteLoader {\n  getScript(url: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      reject(`You should provide a custom remote loader either using NodeRemoteLoader,\n          the Angular2 Remote Loader or another extension that yourself wants to provide.`);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/remote-loader.ts","\nimport { Injectable } from '@angular/core';\nimport { RemoteLoader } from './models/remote-loader';\nimport * as _ from 'lodash';\nimport * as ajvNsAndConstructor from 'ajv';\nimport { ValidationResult } from './models/validation-result';\n\n/**\n *\n * This class loads a script from an url, parses it and fill an ajv instance with theirs definitions\n * @export\n * @class ValidatorDefinitionsLoader\n */\n@Injectable()\nexport class ValidatorDefinitionsLoader {\n\n  _window: Window;\n  /**\n   *\n   *\n   * @readonly\n   * @type {ValidatorExecutionContext}\n   * @memberOf ValidatorDefinitionsLoader\n   */\n  get validatorExecutionContext(): Window {\n    return this._window;\n  }\n\n  /**\n   * Creates an instance of ValidatorDefinitionsLoader.\n   *\n   * @param {RemoteLoader} remoteLoader\n   *\n   * @memberOf ValidatorDefinitionsLoader\n   */\n  constructor(private remoteLoader: RemoteLoader) {\n  }\n\n  /**\n   *\n   *\n   * @param {Window} window\n   * @param {string} url\n   * @returns {Promise<ajvNsAndConstructor.Ajv>}\n   *\n   * @memberOf ValidatorDefinitionsLoader\n   */\n  load(window: Window, url: string): Promise<void> {\n    return this.remoteLoader.getScript(url).then((scriptContent) => {\n      return this.loadScript(window, scriptContent);\n    });\n  }\n\n  private loadScript(window: Window, script: string): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      try {\n        // handler to check any error on script evalution\n        window['DoubleAgentValidatorErrorHandler'] = (e) => {\n          reject(e);\n        };\n\n        window.document.write(`\n          <script>\n            try {\n              ${script}\n            } catch(e) {\n              DoubleAgentValidatorErrorHandler(e);\n            }\n          </script>\n        `);\n        this._window = window;\n        resolve(null);\n      } catch (e) {\n        reject(e);\n      }\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/definitions-loader.service.ts","export * from './form-control-validator-builder.service';\nexport * from './form-group-builder.service';\nexport * from './form-group';\n\n\n\n// WEBPACK FOOTER //\n// ./src/form/index.ts","import { Injector, OpaqueToken, NgModule, APP_INITIALIZER } from '@angular/core';\nimport { DoubleAgentValidator } from './validator.service';\nimport { DoubleAgentValidatorNg2Factory } from './ng2-factory.service';\nimport { DoubleAgentFormGroupBuilder, DoubleAgentFormControlValidatorBuilder } from './form';\nimport { RemoteLoader } from './models/remote-loader';\nimport { Angular2RemoteLoader } from './remote-loaders/angular2-remote-loader';\n\nexport const DOUBLE_AGENT_VALIDATOR_SCHEMA_URL = new OpaqueToken('DoubleAgentValidator.SCHEMA_URL');\nexport const DOUBLE_AGENT_VALIDATOR_SCHEMA_WITH_DEPENDENCIES = new OpaqueToken('DoubleAgentValidator.SCHEMA_WITH_DEPENDENCIES');\n\n@NgModule({\n  providers: [\n    DoubleAgentValidator,\n    DoubleAgentValidatorNg2Factory,\n    DoubleAgentFormGroupBuilder,\n    DoubleAgentFormControlValidatorBuilder,\n    {\n          provide: RemoteLoader,\n          useClass: Angular2RemoteLoader\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (injector, doubleAgentValidatorNg2Factory, doubleAgentValidator) => { return   () => DoubleAgentValidatorNg2Factory.factoryFn(injector, doubleAgentValidatorNg2Factory) },\n      deps: [\n        Injector,\n        DoubleAgentValidatorNg2Factory,\n        DoubleAgentValidator\n      ],\n      multi: true\n    }\n  ],\n  exports: [  ]\n})\nexport class DoubleAgentValidatorModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/validator.module.ts","import { Injectable } from '@angular/core';\nimport { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { JsonSchema } from '../models/schema/json-schema';\nimport { DoubleAgentValidator } from '../validator.service';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class DoubleAgentFormControlValidatorBuilder {\n\n  constructor(private doubleAgentValidator: DoubleAgentValidator) {\n  }\n\n  /**\n   * Returns the validator representing some attribute in the schema\n   * which will be used to Angular 2 validates the user input\n   *\n   * @param {string} schemaName\n   * @param {string} fieldName\n   * @returns {ValidatorFn}\n   *\n   * @memberOf FormControlValidatorBuilder\n   */\n  build(schema: JsonSchema, property: string): ValidatorFn {\n    let validators: ValidatorFn[] = [];\n\n    if (schema.required && schema.required.indexOf(property) >= 0) {\n      validators.push(Validators.required);\n    }\n    validators.push(this.buildAngularValidator(schema.id, property));\n    return Validators.compose(validators);\n  }\n\n  /**\n   * This creates a Angular validator corresponding a json schema and optionally\n   * only for a given property\n   *\n   * @param {string} schema\n   * @param {string} property\n   * @returns {ValidatorFn}\n   *\n   * @memberOf ValidacaoService\n   */\n  buildAngularValidator(schemaName: string, propertyOrFormData?: string | {}): ValidatorFn {\n    return (control: AbstractControl) => {\n      let validationResult = {\n        jsonSchema: null\n      };\n\n\n      // builds the data which will be validated\n      let data = {};\n      if (_.isString(propertyOrFormData)) {\n        data[propertyOrFormData] = control.value;\n      } else {\n        data = propertyOrFormData;\n      }\n\n      // runs the validation\n      let result = this.doubleAgentValidator.validate(schemaName, data);\n\n      if (result.hasErrors) {\n        // if a specific property was provided, then only returns error refering that property\n        if (_.isString(propertyOrFormData)) {\n          let errorsOfProperty = result.errors.filter((error) => {\n            return error.dataPath.match(`\\.${propertyOrFormData}`);\n          });\n          if (errorsOfProperty.length > 0) {\n            validationResult.jsonSchema = {\n              errors: errorsOfProperty\n            };\n            return validationResult;\n          }\n        } else {\n          // if no specific property was passed, so return all errors found\n          validationResult.jsonSchema = {\n            errors: result.errors\n          };\n          return validationResult;\n        }\n      } else {\n        // retorna null no caso de não ter erros de validacao\n        return null;\n\n      }\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/form/form-control-validator-builder.service.ts","module.exports = require(\"@angular/forms\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"@angular/http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/http\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 9\n// module chunks = 0","export * from './validation-result';\nexport * from './remote-loader';\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/index.ts","import { Injectable } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { DoubleAgentValidator } from '../validator.service';\nimport { JsonSchema } from '../models/schema/json-schema';\nimport * as _ from 'lodash';\nimport { DoubleAgentFormControlValidatorBuilder } from './form-control-validator-builder.service';\nimport { DoubleAgentFormGroup } from './form-group';\n\n/**\n * This class allows creates a formGroup which contains all the fields represented in an given schema\n * each one containing it's own angular validators\n * @export\n * @class DoubleAgentFormGroupBuilder\n */\n@Injectable()\nexport class DoubleAgentFormGroupBuilder {\n\n  /**\n   * Creates an instance of FormGroupBuilder.\n   *\n   * @param {DoubleAgentValidator} doubleAgentValidator\n   * @param {FormBuilder} formBuilder\n   *\n   * @memberOf FormGroupBuilder\n   */\n  constructor(\n    private doubleAgentValidator: DoubleAgentValidator,\n    private formControlValidatorBuilder: DoubleAgentFormControlValidatorBuilder,\n    private formBuilder: FormBuilder\n  ) { }\n\n\n  /**\n   * Builds a FormGroup containing all the attributes defined in the jsonSchema\n   *\n   * @param {string} schemaName\n   * @returns {FormGroup}\n   *\n   * @memberOf FormGroupBuilder\n   */\n  build(schemaName: string): DoubleAgentFormGroup | FormGroup {\n\n    // TODO validar se o esquema existe e retornar erro apropriado\n    let jsonSchema: JsonSchema = this.doubleAgentValidator.getSchema(schemaName);\n\n    if (!jsonSchema) {\n      throw Error(`Schema ${schemaName} not found!`);\n    }\n\n    let formGroup: DoubleAgentFormGroup;\n    let formGroupConfig = {};\n\n    // percorre os atributos definidos no jsonSchema, adicionando um FormControl com os respectivos\n    // validadores para cada campo no objeto formGroupConfig\n    _.each(jsonSchema.properties, (attribute, attributeName) => {\n      // TODO get state value from property default\n      formGroupConfig[attributeName] = new FormControl('', this.formControlValidatorBuilder.build(jsonSchema, attributeName));\n    });\n\n    // cria uma instância do FormGroup a partir da configuração construída\n    formGroup = <any>this.formBuilder.group(formGroupConfig);\n\n    // construir validador do FormGroup (keywords do objeto)\n    this.addKeywordsValidator(jsonSchema, formGroup);\n\n    formGroup.jsonSchema = jsonSchema;\n\n    // retorna o Form Group\n    return formGroup;\n  }\n\n  private addKeywordsValidator(schema: JsonSchema, formGroup: FormGroup) {\n    let keywords = this.doubleAgentValidator.getKeywords(schema);\n\n    let validator = this.buildAngularFormGroupValidator(schema.id, keywords, formGroup);\n\n    formGroup.setValidators([validator]);\n  }\n\n  buildAngularFormGroupValidator(schemaName: string, keywords: string[], formGroup: FormGroup): ValidatorFn {\n    return (control: AbstractControl) => {\n      let validationResult = {\n        jsonSchema: null\n      };\n\n\n      let data = formGroup.value;\n\n      // runs the validation\n      let result = this.doubleAgentValidator.validate(schemaName, data);\n\n      if (result.hasErrors) {\n        let errorsOfKeyword = result.errors.filter((error) => {\n          return _.includes(keywords, error.keyword);\n        });\n        if (errorsOfKeyword.length > 0) {\n          validationResult.jsonSchema = {\n            errors: errorsOfKeyword\n          };\n          return validationResult;\n        }\n      }\n      // retorna null no caso de não ter erros de validacao\n      return null;\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/form/form-group-builder.service.ts","import { Http } from '@angular/http';\nimport { DoubleAgentValidator } from './validator.service';\nimport { ValidatorDefinitionsLoader } from './definitions-loader.service';\nimport { Injectable, Injector } from '@angular/core';\n\nimport { DOUBLE_AGENT_VALIDATOR_SCHEMA_URL } from './validator.module';\nimport { RemoteLoader } from './models/remote-loader';\n\n/**\n *\n * This classs provide a facility to load json schema definitions into a DoubleAgentValidator instance and provide it\n * to Angular Dependency Injection\n * @export\n * @class DoubleAgentValidatorNg2Factory\n */\n\n@Injectable()\nexport class DoubleAgentValidatorNg2Factory {\n\n  /**\n   * This static function is utilized as a provider Factory to builds the DoubleAgentValidator\n   * instance filled with json schemas from an given url into the Angular2  dependency injection\n   *\n   * @static\n   * @param {Injector} injector\n   * @param {DoubleAgentValidatorNg2Factory} factory\n   * @returns {Promise<void>}\n   *\n   * @memberOf DoubleAgentValidatorNg2Factory\n   */\n  static factoryFn(injector: Injector, factory: DoubleAgentValidatorNg2Factory) {\n    //return (): Promise<void> => {\n    let url: string = injector.get(DOUBLE_AGENT_VALIDATOR_SCHEMA_URL);\n    return new Promise<void>((resolve, reject) => {\n      let errors = null;\n      if (url == null) {\n        errors = 'DoubleAgentValidator Module needs an url provided through the DOUBLE_AGENT_VALIDATOR_SCHEMA_URL token';\n      }\n      if (errors) {\n        reject(errors);\n      }\n      factory.load(url).then(() => resolve()).catch(() => reject());\n    });\n    //}\n\n  }\n\n  /**\n   * Creates an instance of DoubleAgentValidatorNg2Factory.\n   *\n   * @param {Http} http\n   * @param {DoubleAgentValidator} doubleAgentValidator\n   *\n   * @memberOf DoubleAgentValidatorNg2Factory\n   */\n  constructor(\n    private http: Http,\n    private doubleAgentValidator: DoubleAgentValidator,\n    private remoteLoader: RemoteLoader) {\n  }\n\n  /**\n   * Loads a script from a url, parses it and load into the ajv object.\n   * At this moment is using a iframe to isolate the parse/evaluate of the code.\n   * Maybe it would useful have a strategy loading using web worker\n   * @param {string} url\n   * @returns {Promise<void>}\n   *\n   * @memberOf DoubleAgentValidatorNg2Factory\n   */\n  load(url: string): Promise<void> {\n    let validationsLoader = new ValidatorDefinitionsLoader(this.remoteLoader);\n    let iframe = document.createElement('iframe');\n    iframe.id = 'DoubleAgentValidator';\n    iframe.border = '0';\n    iframe.src = 'about:blank';\n    iframe.style.background = 'transparent';\n    iframe.style.width = '1px';\n    iframe.style.height = '1px';\n    (<any>iframe).sandbox = 'allow-scripts allow-same-origin allow-modals';\n    document.body.appendChild(iframe);\n    let window = iframe.contentWindow;\n    return new Promise<void>((resolve, reject) => {\n      validationsLoader.load(window, url).then(() => {\n        this.doubleAgentValidator['scriptContext'] = window;\n        window['DoubleAgentValidator'] = this.doubleAgentValidator;\n        this.doubleAgentValidator['_notifyReady']();\n        resolve(null);\n      },\n        (e) => {\n          reject('Could not create the DoubleAgentValidator instance: ' + e);\n        });\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ng2-factory.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { RemoteLoader } from '../models/remote-loader';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class Angular2RemoteLoader implements RemoteLoader {\n  constructor(private http: Http) { }\n\n  getScript(url: string) {\n    return new Promise((resolve, reject) => {\n\n      let observable: Observable<Response> = this.http.get(url);\n\n      observable.subscribe((response: Response) => {\n        resolve(response.text());\n      },\n        (error) => { /* error handling block*/\n          reject(error);\n        });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/remote-loaders/angular2-remote-loader.ts","module.exports = require(\"rxjs/ReplaySubject\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/ReplaySubject\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"rxjs/add/operator/toPromise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/add/operator/toPromise\"\n// module id = 15\n// module chunks = 0","export * from './validator.service';\nexport * from './definitions-loader.service';\nexport * from './validator.module';\nexport * from './form';\nexport * from './models';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}